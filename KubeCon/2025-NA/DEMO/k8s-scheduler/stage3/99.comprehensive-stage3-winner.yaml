# ============================================================
# Comprehensive Test: Stage 3 Score Actually Matters
# ============================================================
# This demonstrates how Stage 3 (Score) preferences work when
# Stage 2 (Filter) leaves multiple candidates.
#
# Expected behavior:
# - Stage 2 Filter leaves multiple nodes (w1, w2, w3, w4)
# - Stage 3 Score evaluates preferences and picks the best match
# - Pod gets scheduled based on scoring algorithm
# ============================================================

apiVersion: v1
kind: Pod
metadata:
  name: comprehensive-stage3-winner
  labels:
    test: comprehensive
    scenario: stage3-winner
spec:
  # ====== Stage 2 Filter (Hard Constraints) ======

  # Filter: Only zone-a or zone-b nodes
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: zone
            operator: In
            values:
            - zone-a
            - zone-b
      # Result after Stage 2: w1, w2, w3, w4 are all candidates

      # ====== Stage 3 Score (Soft Constraints) - MATTERS! ======

      # Strong preference: zone-a nodes (w1, w2)
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
          - key: zone
            operator: In
            values:
            - zone-a  # w1, w2 get 100 points

      # Medium preference: SSD nodes (w1, w3)
      - weight: 80
        preference:
          matchExpressions:
          - key: disktype
            operator: In
            values:
            - ssd  # w1, w3 get 80 points

      # Light preference: HDD nodes (w2, w4)
      - weight: 30
        preference:
          matchExpressions:
          - key: disktype
            operator: In
            values:
            - hdd  # w2, w4 get 30 points

  containers:
  - name: app
    image: quay.io/nginx/nginx-unprivileged:1.27.5-alpine-slim
    resources:
      requests:
        memory: "16Mi"
        cpu: "10m"

# ============================================================
# Expected Result:
# ============================================================
# Node: w1-k8s (zone-a, SSD) - MOST LIKELY
#
# Scoring breakdown:
# - w1-k8s: zone-a (100) + SSD (80) = 180 points ← WINNER!
# - w2-k8s: zone-a (100) + HDD (30) = 130 points
# - w3-k8s: zone-b (0) + SSD (80) = 80 points
# - w4-k8s: zone-b (0) + HDD (30) = 30 points
#
# Why Stage 3 matters here:
# 1. Stage 2 Filter left 4 candidates (w1, w2, w3, w4)
# 2. Stage 3 Score evaluated each node against preferences
# 3. w1-k8s scored highest (180 points)
# 4. Pod gets scheduled to w1-k8s based on scoring
# 5. Stage 3 preferences directly determined the final placement
#
# Comparison with comprehensive-bypass-stage3.yaml:
# - bypass-stage3: Only 1 candidate after Stage 2 → Stage 3 is meaningless
# - stage3-winner: 4 candidates after Stage 2 → Stage 3 picks the best
#
# Test command:
# kubectl get pod comprehensive-stage3-winner -o wide
# kubectl describe pod comprehensive-stage3-winner | grep -A10 "Events:"
